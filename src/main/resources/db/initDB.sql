DROP TABLE menus_dishes IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE users_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name       VARCHAR(255)           NOT NULL,
    password   VARCHAR(255)           NOT NULL,
    email      VARCHAR(255)           NOT NULL,
    registered DATETIME DEFAULT now() NOT NULL,
    CONSTRAINT user_email_idx UNIQUE (email)
);

CREATE TABLE users_roles
(
    user_id INTEGER      NOT NULL,
    role    VARCHAR(255) NOT NULL,
    CONSTRAINT users_roles_unique_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id   INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX restaurants_name_idx ON restaurants (name);

CREATE TABLE menus
(
    id            INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    restaurant_id INTEGER              NOT NULL,
    date          DATE DEFAULT today() NOT NULL,
    CONSTRAINT menus_restaurant_id_date UNIQUE (restaurant_id, date),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX menus_date_restaurant_idx ON menus (date, restaurant_id);

CREATE TABLE dishes
(
    id    INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name  VARCHAR(255) NOT NULL,
    price INTEGER      NOT NULL,
    CONSTRAINT dishes_name_price_idx UNIQUE (name, price)
);
CREATE INDEX dishes_name_idx ON dishes (name);

CREATE TABLE votes
(
    user_id       INTEGER              NOT NULL,
    restaurant_id INTEGER              NOT NULL,
    date          DATE DEFAULT today() NOT NULL,
    CONSTRAINT votes_user_date_idx UNIQUE (user_id, date),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE TABLE menus_dishes
(
    dish_id INTEGER NOT NULL,
    menu_id INTEGER NOT NULL,
    CONSTRAINT menu_dishes_menu_dish_idx UNIQUE (menu_id, dish_id),
    FOREIGN KEY (dish_id) REFERENCES dishes (id) ON DELETE CASCADE,
    FOREIGN KEY (menu_id) REFERENCES menus (id) ON DELETE CASCADE
);